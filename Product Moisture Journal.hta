<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>–ñ—É—Ä–Ω–∞–ª –≤–æ–ª–æ–≥–æ—Å—Ç—ñ –ø—Ä–æ–¥—É–∫—Ü—ñ—ó</title>
    <HTA:APPLICATION
      ID="ProductMoistureApp"
      APPLICATIONNAME="Product Moisture Tracker"
      BORDER="thin"
      BORDERSTYLE="normal"
      CAPTION="yes"
      MAXIMIZEBUTTON="yes"
      MINIMIZEBUTTON="yes"
      SHOWINTASKBAR="yes"
      SINGLEINSTANCE="yes"
      SYSMENU="yes"
      WINDOWSTATE="normal"
      SCROLL="yes"
      SELECTION="no"
    />
    <style>
      body {
        font-family: Arial, sans-serif;
        padding: 15px;
        background-color: #f5f5f5;
        margin: 0;
        color: #333;
        min-height: 100vh;
      }
      .container {
        background: white;
        padding: 25px;
        border: 1px solid #ddd;
        max-width: 800px;
        margin: 0 auto;
        min-height: 600px;
      }
      h1 {
        text-align: center;
        color: #2c3e50;
        margin-bottom: 25px;
        font-size: 24px;
      }

      .tabs {
        margin-bottom: 20px;
        border-bottom: 2px solid #ddd;
      }
      .tab-button {
        background: #f0f0f0;
        border: 1px solid #ddd;
        padding: 10px 20px;
        cursor: pointer;
        display: inline-block;
        margin-right: 5px;
        font-weight: bold;
      }
      .tab-button.active {
        background: white;
        border-bottom: 2px solid white;
        margin-bottom: -2px;
      }
      .tab-content {
        display: none;
        padding: 20px 0;
      }
      #input-tab {
        display: block;
      }

      .input-group {
        margin: 15px 0;
        display: block;
      }
      .input-row {
        margin: 10px 0;
        display: block;
      }
      label {
        display: inline-block;
        width: 140px;
        font-weight: bold;
        color: #34495e;
        vertical-align: top;
      }
      input[type="date"],
      input[type="number"],
      select {
        padding: 8px 10px;
        border: 2px solid #e0e0e0;
        font-size: 14px;
        width: 120px;
        margin-left: 10px;
      }
      input[type="date"]:focus,
      input[type="number"]:focus,
      select:focus {
        outline: none;
        border-color: #3498db;
      }

      .moisture-fields {
        background: #f9f9f9;
        padding: 15px;
        border: 1px solid #ddd;
        margin: 15px 0;
      }
      .moisture-fields h3 {
        margin-top: 0;
        color: #2c3e50;
      }

      .button-group {
        text-align: center;
        margin: 25px 0;
      }
      button {
        padding: 12px 20px;
        border: 1px solid #ccc;
        font-size: 14px;
        font-weight: bold;
        cursor: pointer;
        margin: 0 5px;
        min-width: 140px;
        background: #3498db;
        color: white;
      }
      button:hover {
        background: #2980b9;
      }
      .btn-success {
        background: #27ae60;
      }
      .btn-success:hover {
        background: #229954;
      }
      .btn-info {
        background: #17a2b8;
      }
      .btn-info:hover {
        background: #138496;
      }
      .btn-warning {
        background: #f39c12;
      }
      .btn-warning:hover {
        background: #e67e22;
      }

      .status {
        margin: 15px 0;
        padding: 12px 15px;
        border-left: 4px solid;
        font-weight: bold;
      }
      .success {
        background: #d4edda;
        border-left-color: #28a745;
        color: #155724;
      }
      .error {
        background: #f8d7da;
        border-left-color: #dc3545;
        color: #721c24;
      }
      .info {
        background: #cce7ff;
        border-left-color: #007bff;
        color: #004085;
      }

      table {
        border-collapse: collapse;
        width: 100%;
        margin-top: 20px;
        background: white;
        border: 1px solid #ddd;
      }
      th,
      td {
        padding: 8px;
        text-align: center;
        border: 1px solid #ddd;
        font-size: 12px;
      }
      th {
        background: #f8f9fa;
        font-weight: bold;
        color: #495057;
      }
      tr:nth-child(even) {
        background: #f8f9fa;
      }

      .stats-container {
        margin: 20px 0;
      }
      .stat-box {
        background: #f8f9fa;
        padding: 15px;
        border: 1px solid #ddd;
        text-align: center;
        display: inline-block;
        margin: 5px;
        min-width: 120px;
      }
      .stat-value {
        font-size: 18px;
        font-weight: bold;
        color: #2c3e50;
      }
      .stat-label {
        font-size: 12px;
        color: #6c757d;
        margin-top: 5px;
      }

      .file-info {
        font-size: 12px;
        color: #6c757d;
        margin-top: 10px;
        text-align: center;
        font-style: italic;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <h1>üìä –ñ—É—Ä–Ω–∞–ª –≤–æ–ª–æ–≥–æ—Å—Ç—ñ –ø—Ä–æ–¥—É–∫—Ü—ñ—ó</h1>

      <div class="tabs">
        <div class="tab-button active" onclick="showTab('input')">
          üìù –í–≤–µ–¥–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
        </div>
        <div class="tab-button" onclick="showTab('averages')">
          üìä –°–µ—Ä–µ–¥–Ω—ñ –∑–∞ –¥–∞—Ç–∞–º–∏
        </div>
        <div class="tab-button" onclick="showTab('data')">üìã –í—Å—ñ –∑–∞–ø–∏—Å–∏</div>
      </div>

      <!-- –í–∫–ª–∞–¥–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö -->
      <div id="input-tab" class="tab-content active">
        <div class="input-group">
          <div class="input-row">
            <label for="inputDate">üìÖ –î–∞—Ç–∞:</label>
            <input type="date" id="inputDate" />
          </div>

          <div class="input-row">
            <label for="sampleNumber">üî¢ –í—ñ–¥–±—ñ—Ä ‚Ññ:</label>
            <select id="sampleNumber">
              <option value="1">1</option>
              <option value="2">2</option>
              <option value="3">3</option>
              <option value="4">4</option>
              <option value="5">5</option>
              <option value="6">6</option>
            </select>
          </div>
        </div>

        <div class="moisture-fields">
          <h3>üíß –ü–æ–∫–∞–∑–Ω–∏–∫–∏ –≤–æ–ª–æ–≥–æ—Å—Ç—ñ:</h3>

          <div class="input-row">
            <label for="moisture_drana">I –¥—Ä–∞–Ω–∞ (%):</label>
            <input
              type="text"
              id="moisture_drana"
              placeholder="14,5 –∞–±–æ 14.5"
            />
          </div>

          <div class="input-row">
            <label for="moisture_flour_vs">–ë–æ—Ä–æ—à–Ω–æ –í/–° (%):</label>
            <input
              type="text"
              id="moisture_flour_vs"
              placeholder="14,5 –∞–±–æ 14.5"
            />
          </div>

          <div class="input-row">
            <label for="moisture_flour_1s">–ë–æ—Ä–æ—à–Ω–æ 1/–° (%):</label>
            <input
              type="text"
              id="moisture_flour_1s"
              placeholder="14,5 –∞–±–æ 14.5"
            />
          </div>

          <div class="input-row">
            <label for="moisture_soak1">1 –∑–∞–º–æ—á–∫–∞ (%):</label>
            <input
              type="text"
              id="moisture_soak1"
              placeholder="14,5 –∞–±–æ 14.5"
            />
          </div>

          <div class="input-row">
            <label for="moisture_supply">–ü–æ–¥–∞—á–∞ (%):</label>
            <input
              type="text"
              id="moisture_supply"
              placeholder="14,5 –∞–±–æ 14.5"
            />
          </div>
        </div>

        <div class="button-group">
          <button onclick="saveData()">üíæ –ó–±–µ—Ä–µ–≥—Ç–∏</button>
          <button class="btn-info" onclick="exportCSV()">üìÑ –ï–∫—Å–ø–æ—Ä—Ç CSV</button>
          <button class="btn-warning" onclick="clearAllData()">
            üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç–∏ –≤—Å–µ
          </button>
        </div>

        <div id="status"></div>
        <div id="fileInfo" class="file-info"></div>
      </div>

      <!-- –í–∫–ª–∞–¥–∫–∞ —Å–µ—Ä–µ–¥–Ω—ñ—Ö –∑–Ω–∞—á–µ–Ω—å -->
      <div id="averages-tab" class="tab-content">
        <h3>üìä –°–µ—Ä–µ–¥–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –≤–æ–ª–æ–≥–æ—Å—Ç—ñ –ø–æ –¥–∞—Ç–∞—Ö</h3>
        <div id="averagesDisplay"></div>
      </div>

      <!-- –í–∫–ª–∞–¥–∫–∞ –≤—Å—ñ—Ö –∑–∞–ø–∏—Å—ñ–≤ -->
      <div id="data-tab" class="tab-content">
        <h3>üìã –í—Å—ñ –∑–∞–ø–∏—Å–∏</h3>
        <div class="button-group">
          <button class="btn-success" onclick="loadData()">
            üìä –û–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ
          </button>
        </div>
        <div id="stats"></div>
        <div id="dataDisplay"></div>
      </div>
    </div>

    <script language="VBScript">
      Dim fso, csvFilePath, shell
      Dim totalRecords

      Sub Window_OnLoad
          On Error Resume Next

          Set fso = CreateObject("Scripting.FileSystemObject")
          Set shell = CreateObject("WScript.Shell")

          Dim safePath
          safePath = GetSafeDataPath()
          csvFilePath = safePath & "\db.csv"

          SetCurrentDate()
          InitializeDataFile()
          LoadDataSilently()

          ShowStatus "‚úÖ –î–æ–¥–∞—Ç–æ–∫ –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏", "success"
          UpdateFileInfo()

          If Err.Number <> 0 Then
              ShowStatus "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó: " & Err.Description, "error"
          End If

          On Error GoTo 0
      End Sub

      Function GetSafeDataPath()
          On Error Resume Next

          ' –í–∏–∑–Ω–∞—á–∏—Ç–∏ –ø–∞–ø–∫—É, –¥–µ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è HTA —Ñ–∞–π–ª
          Dim currentPath, databasePath
          currentPath = fso.GetParentFolderName(Replace(location.pathname, "/", "\"))
          If Left(currentPath, 1) = "\" Then
              currentPath = Mid(currentPath, 2)
          End If

          ' –°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–∞–ø–∫—É database –ø–æ—Ä—è–¥ –∑ HTA —Ñ–∞–π–ª–æ–º
          databasePath = currentPath & "\database"

          If Not fso.FolderExists(databasePath) Then
              fso.CreateFolder(databasePath)
          End If

          GetSafeDataPath = databasePath

          On Error GoTo 0
      End Function

      ' –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —á–∏ —î –∑–Ω–∞—á–µ–Ω–Ω—è —á–∏—Å–ª–æ–º (–ø—ñ–¥—Ç—Ä–∏–º–∫–∞ —ñ –∫—Ä–∞–ø–∫–∏, —ñ –∫–æ–º–∏)
      Function IsValidNumber(value)
          On Error Resume Next
          IsValidNumber = False
          If value = "" Then Exit Function

          ' –£ —É–∫—Ä–∞—ó–Ω—Å—å–∫—ñ–π –ª–æ–∫–∞–ª—ñ–∑–∞—Ü—ñ—ó –∫–æ–º–∞ —î –¥–µ—Å—è—Ç–∫–æ–≤–∏–º —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫–æ–º
          ' –°–ø–æ—á–∞—Ç–∫—É —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ –∑ –∫–æ–º–æ—é (—Å—Ç–∞–Ω–¥–∞—Ä—Ç –¥–ª—è –£–∫—Ä–∞—ó–Ω–∏)
          Dim testValue
          testValue = Replace(value, ".", ",")
          If IsNumeric(testValue) Then
              IsValidNumber = True
              Exit Function
          End If

          ' –Ø–∫—â–æ –Ω–µ –ø—Ä–∞—Ü—é—î - —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è
          If IsNumeric(value) Then
              IsValidNumber = True
              Exit Function
          End If

          On Error GoTo 0
      End Function

      ' –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —á–∏—Å–ª–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è
      Function GetNumericValue(value)
          On Error Resume Next
          ' –ü–µ—Ä–µ—Ç–≤–æ—Ä–∏—Ç–∏ –≤ —Ñ–æ—Ä–º–∞—Ç —è–∫–∏–π —Ä–æ–∑—É–º—ñ—î —Å–∏—Å—Ç–µ–º–∞
          Dim testValue
          testValue = Replace(value, ".", ",")
          GetNumericValue = CDbl(testValue)
          On Error GoTo 0
      End Function

      Function TestWriteAccess(folderPath)
          On Error Resume Next
          TestWriteAccess = False

          If Not fso.FolderExists(folderPath) Then Exit Function

          Dim testFile, file
          testFile = folderPath & "\test_" & Timer & ".tmp"
          Set file = fso.CreateTextFile(testFile, True)
          If Err.Number = 0 Then
              file.Close
              fso.DeleteFile(testFile)
              TestWriteAccess = True
          End If
          Set file = Nothing
          On Error GoTo 0
      End Function

      Sub SetCurrentDate()
          Dim today
          today = Date()
          document.getElementById("inputDate").value = Year(today) & "-" & Right("0" & Month(today), 2) & "-" & Right("0" & Day(today), 2)
      End Sub

      Sub InitializeDataFile()
          On Error Resume Next
          If Not fso.FileExists(csvFilePath) Then
              Dim file
              Set file = fso.CreateTextFile(csvFilePath, True, True)
              file.WriteLine "–î–∞—Ç–∞,–í—ñ–¥–±—ñ—Ä_‚Ññ,I_–¥—Ä–∞–Ω–∞,–ë–æ—Ä–æ—à–Ω–æ_–í–°,–ë–æ—Ä–æ—à–Ω–æ_1–°,–ó–∞–º–æ—á–∫–∞_1,–ü–æ–¥–∞—á–∞,–ß–∞—Å_–∑–∞–ø–∏—Å—É"
              file.Close
              Set file = Nothing
          End If
          On Error GoTo 0
      End Sub

      Sub ShowStatus(message, statusType)
          document.getElementById("status").innerHTML = "<div class='status " & statusType & "'>" & message & "</div>"
      End Sub

      Sub UpdateFileInfo()
          Dim info
          If fso.FileExists(csvFilePath) Then
              Dim fileSize
              fileSize = Round(fso.GetFile(csvFilePath).Size / 1024, 2)
              info = "üìÅ –§–∞–π–ª: " & fso.GetFileName(csvFilePath) & " | üìÇ –†–æ–∑–º—ñ—Ä: " & fileSize & " KB"
          Else
              info = "üìÅ –§–∞–π–ª –±—É–¥–µ —Å—Ç–≤–æ—Ä–µ–Ω–æ –ø—ñ—Å–ª—è –ø–µ—Ä—à–æ–≥–æ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è"
          End If
          document.getElementById("fileInfo").innerHTML = info
      End Sub

      Function ValidateInputs()
          ValidateInputs = True

          Dim inputDate, sampleNum, drana, flour_vs, flour_1s, soak1, supply
          inputDate = Trim(document.getElementById("inputDate").value)
          sampleNum = Trim(document.getElementById("sampleNumber").value)
          drana = Trim(document.getElementById("moisture_drana").value)
          flour_vs = Trim(document.getElementById("moisture_flour_vs").value)
          flour_1s = Trim(document.getElementById("moisture_flour_1s").value)
          soak1 = Trim(document.getElementById("moisture_soak1").value)
          supply = Trim(document.getElementById("moisture_supply").value)

          If inputDate = "" Then
              ShowStatus "‚ùå –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –¥–∞—Ç—É!", "error"
              document.getElementById("inputDate").focus()
              ValidateInputs = False
              Exit Function
          End If

          ' –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–∏–Ω–∞–π–º–Ω—ñ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—è –≤–æ–ª–æ–≥–æ—Å—Ç—ñ
          If drana = "" And flour_vs = "" And flour_1s = "" And soak1 = "" And supply = "" Then
              ShowStatus "‚ùå –ó–∞–ø–æ–≤–Ω—ñ—Ç—å –ø—Ä–∏–Ω–∞–π–º–Ω—ñ –æ–¥–Ω–µ –ø–æ–ª–µ –≤–æ–ª–æ–≥–æ—Å—Ç—ñ!", "error"
              ValidateInputs = False
              Exit Function
          End If

          ' –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏—Å–ª–æ–≤–∏—Ö –∑–Ω–∞—á–µ–Ω—å (–ø—ñ–¥—Ç—Ä–∏–º–∫–∞ —è–∫ –∫–æ–º–∏, —Ç–∞–∫ —ñ –∫—Ä–∞–ø–∫–∏)
          If drana <> "" Then
              If Not IsValidNumber(drana) Then
                  ShowStatus "‚ùå I –¥—Ä–∞–Ω–∞: –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è! –í–≤–µ–¥–µ–Ω–æ: " & drana, "error"
                  ValidateInputs = False
                  Exit Function
              End If
              Dim dranaVal
              dranaVal = GetNumericValue(drana)
              If dranaVal < 0 Or dranaVal > 100 Then
                  ShowStatus "‚ùå I –¥—Ä–∞–Ω–∞: –∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ–≤–∏–Ω–Ω–æ –±—É—Ç–∏ –≤—ñ–¥ 0 –¥–æ 100%! –í–≤–µ–¥–µ–Ω–æ: " & drana, "error"
                  ValidateInputs = False
                  Exit Function
              End If
          End If

          If flour_vs <> "" Then
              If Not IsValidNumber(flour_vs) Then
                  ShowStatus "‚ùå –ë–æ—Ä–æ—à–Ω–æ –í/–°: –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è! –í–≤–µ–¥–µ–Ω–æ: " & flour_vs, "error"
                  ValidateInputs = False
                  Exit Function
              End If
              Dim flourVsVal
              flourVsVal = GetNumericValue(flour_vs)
              If flourVsVal < 0 Or flourVsVal > 100 Then
                  ShowStatus "‚ùå –ë–æ—Ä–æ—à–Ω–æ –í/–°: –∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ–≤–∏–Ω–Ω–æ –±—É—Ç–∏ –≤—ñ–¥ 0 –¥–æ 100%! –í–≤–µ–¥–µ–Ω–æ: " & flour_vs, "error"
                  ValidateInputs = False
                  Exit Function
              End If
          End If

          If flour_1s <> "" Then
              If Not IsValidNumber(flour_1s) Then
                  ShowStatus "‚ùå –ë–æ—Ä–æ—à–Ω–æ 1/–°: –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è! –í–≤–µ–¥–µ–Ω–æ: " & flour_1s, "error"
                  ValidateInputs = False
                  Exit Function
              End If
              Dim flour1sVal
              flour1sVal = GetNumericValue(flour_1s)
              If flour1sVal < 0 Or flour1sVal > 100 Then
                  ShowStatus "‚ùå –ë–æ—Ä–æ—à–Ω–æ 1/–°: –∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ–≤–∏–Ω–Ω–æ –±—É—Ç–∏ –≤—ñ–¥ 0 –¥–æ 100%! –í–≤–µ–¥–µ–Ω–æ: " & flour_1s, "error"
                  ValidateInputs = False
                  Exit Function
              End If
          End If

          If soak1 <> "" Then
              If Not IsValidNumber(soak1) Then
                  ShowStatus "‚ùå 1 –∑–∞–º–æ—á–∫–∞: –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è! –í–≤–µ–¥–µ–Ω–æ: " & soak1, "error"
                  ValidateInputs = False
                  Exit Function
              End If
              Dim soak1Val
              soak1Val = GetNumericValue(soak1)
              If soak1Val < 0 Or soak1Val > 100 Then
                  ShowStatus "‚ùå 1 –∑–∞–º–æ—á–∫–∞: –∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ–≤–∏–Ω–Ω–æ –±—É—Ç–∏ –≤—ñ–¥ 0 –¥–æ 100%! –í–≤–µ–¥–µ–Ω–æ: " & soak1, "error"
                  ValidateInputs = False
                  Exit Function
              End If
          End If

          If supply <> "" Then
              If Not IsValidNumber(supply) Then
                  ShowStatus "‚ùå –ü–æ–¥–∞—á–∞: –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è! –í–≤–µ–¥–µ–Ω–æ: " & supply, "error"
                  ValidateInputs = False
                  Exit Function
              End If
              Dim supplyVal
              supplyVal = GetNumericValue(supply)
              If supplyVal < 0 Or supplyVal > 100 Then
                  ShowStatus "‚ùå –ü–æ–¥–∞—á–∞: –∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ–≤–∏–Ω–Ω–æ –±—É—Ç–∏ –≤—ñ–¥ 0 –¥–æ 100%! –í–≤–µ–¥–µ–Ω–æ: " & supply, "error"
                  ValidateInputs = False
                  Exit Function
              End If
          End If
      End Function

      Sub saveData()
          On Error Resume Next

          ' –°–ø–æ—á–∞—Ç–∫—É –≤–∞–ª—ñ–¥–∞—Ü—ñ—è
          If Not ValidateInputs() Then
              Exit Sub
          End If

          ' –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–Ω–∞—á–µ–Ω—å –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ—ó –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó
          Dim inputDate, sampleNum, drana, flour_vs, flour_1s, soak1, supply
          inputDate = document.getElementById("inputDate").value
          sampleNum = document.getElementById("sampleNumber").value
          drana = Trim(document.getElementById("moisture_drana").value)
          flour_vs = Trim(document.getElementById("moisture_flour_vs").value)
          flour_1s = Trim(document.getElementById("moisture_flour_1s").value)
          soak1 = Trim(document.getElementById("moisture_soak1").value)
          supply = Trim(document.getElementById("moisture_supply").value)

          Dim currentTime
          currentTime = Now()

          ' –ó–∞–º—ñ–Ω–∏—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ –ø–æ–ª—è –Ω–∞ "-" —ñ –Ω–æ—Ä–º–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —á–∏—Å–ª–æ–≤—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è CSV
          If drana = "" Then
              drana = "-"
          Else
              ' –ó–±–µ—Ä—ñ–≥–∞—Ç–∏ –≤ CSV –∑ –∫—Ä–∞–ø–∫–æ—é (—Å—Ç–∞–Ω–¥–∞—Ä—Ç CSV), –Ω–µ–∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –≤–≤–µ–¥–µ–Ω–Ω—è
              drana = Replace(drana, ",", ".")
          End If

          If flour_vs = "" Then
              flour_vs = "-"
          Else
              flour_vs = Replace(flour_vs, ",", ".")
          End If

          If flour_1s = "" Then
              flour_1s = "-"
          Else
              flour_1s = Replace(flour_1s, ",", ".")
          End If

          If soak1 = "" Then
              soak1 = "-"
          Else
              soak1 = Replace(soak1, ",", ".")
          End If

          If supply = "" Then
              supply = "-"
          Else
              supply = Replace(supply, ",", ".")
          End If

          ' –ó–∞–ø–∏—Å —É —Ñ–∞–π–ª
          Dim file
          Set file = fso.OpenTextFile(csvFilePath, 8, True, -1)
          Dim csvLine
          csvLine = inputDate & "," & sampleNum & "," & drana & "," & flour_vs & "," & flour_1s & "," & soak1 & "," & supply & "," & currentTime
          file.WriteLine csvLine
          file.Close
          Set file = Nothing

          ShowStatus "‚úÖ –î–∞–Ω—ñ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!", "success"
          ClearInputFields()
          LoadDataSilently()
          UpdateFileInfo()

          If Err.Number <> 0 Then
              ShowStatus "‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è: " & Err.Description, "error"
          End If

          On Error GoTo 0
      End Sub

      Sub ClearInputFields()
          document.getElementById("moisture_drana").value = ""
          document.getElementById("moisture_flour_vs").value = ""
          document.getElementById("moisture_flour_1s").value = ""
          document.getElementById("moisture_soak1").value = ""
          document.getElementById("moisture_supply").value = ""

          ' –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–±—ñ–ª—å—à–∏—Ç–∏ –Ω–æ–º–µ—Ä –≤—ñ–¥–±–æ—Ä—É
          Dim currentSample
          currentSample = CInt(document.getElementById("sampleNumber").value)
          If currentSample < 6 Then
              document.getElementById("sampleNumber").value = currentSample + 1
          Else
              ' –Ø–∫—â–æ –¥–æ—Å—è–≥–ª–∏ 6, –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω—É –¥–∞—Ç—É —ñ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –≤—ñ–¥–±—ñ—Ä 1
              Dim nextDate
              nextDate = DateAdd("d", 1, CDate(document.getElementById("inputDate").value))
              document.getElementById("inputDate").value = Year(nextDate) & "-" & Right("0" & Month(nextDate), 2) & "-" & Right("0" & Day(nextDate), 2)
              document.getElementById("sampleNumber").value = 1
          End If
      End Sub

      Sub LoadDataSilently()
          On Error Resume Next
          LoadDataFromFile(True)
          LoadAverages()
          On Error GoTo 0
      End Sub

      Sub loadData()
          LoadDataFromFile(False)
          LoadAverages()
      End Sub

      Sub LoadDataFromFile(silent)
          On Error Resume Next

          If Not fso.FileExists(csvFilePath) Then
              If Not silent Then ShowStatus "‚ùå –§–∞–π–ª –¥–∞–Ω–∏—Ö –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!", "error"
              Exit Sub
          End If

          Dim file, content, lines, i, fields
          Set file = fso.OpenTextFile(csvFilePath, 1, False, -1)
          content = file.ReadAll()
          file.Close
          Set file = Nothing

          lines = Split(content, vbCrLf)
          totalRecords = 0

          For i = 1 To UBound(lines)
              If Trim(lines(i)) <> "" Then
                  totalRecords = totalRecords + 1
              End If
          Next

          If totalRecords = 0 Then
              If Not silent Then ShowStatus "üìù –§–∞–π–ª –¥–∞–Ω–∏—Ö –ø–æ—Ä–æ–∂–Ω—ñ–π", "info"
              document.getElementById("dataDisplay").innerHTML = ""
              document.getElementById("stats").innerHTML = ""
              Exit Sub
          End If

          Dim htmlTable, recordsToShow, displayCount
          recordsToShow = 20

          htmlTable = "<h4>üìä –û—Å—Ç–∞–Ω–Ω—ñ –∑–∞–ø–∏—Å–∏ (–≤—Å—å–æ–≥–æ: " & totalRecords & "):</h4>"
          htmlTable = htmlTable & "<table><tr><th>üìÖ –î–∞—Ç–∞</th><th>üî¢ –í—ñ–¥–±—ñ—Ä ‚Ññ</th><th>I –¥—Ä–∞–Ω–∞</th><th>–ë–æ—Ä–æ—à–Ω–æ –í/–°</th><th>–ë–æ—Ä–æ—à–Ω–æ 1/–°</th><th>1 –∑–∞–º–æ—á–∫–∞</th><th>–ü–æ–¥–∞—á–∞</th><th>üïê –ß–∞—Å</th></tr>"

          displayCount = 0
          For i = UBound(lines) To 1 Step -1
              If Trim(lines(i)) <> "" And displayCount < recordsToShow Then
                  fields = Split(lines(i), ",")
                  If UBound(fields) >= 7 Then
                      htmlTable = htmlTable & "<tr>"
                      htmlTable = htmlTable & "<td>" & fields(0) & "</td>"
                      htmlTable = htmlTable & "<td>" & fields(1) & "</td>"
                      htmlTable = htmlTable & "<td>" & FormatMoistureValue(fields(2)) & "</td>"
                      htmlTable = htmlTable & "<td>" & FormatMoistureValue(fields(3)) & "</td>"
                      htmlTable = htmlTable & "<td>" & FormatMoistureValue(fields(4)) & "</td>"
                      htmlTable = htmlTable & "<td>" & FormatMoistureValue(fields(5)) & "</td>"
                      htmlTable = htmlTable & "<td>" & FormatMoistureValue(fields(6)) & "</td>"
                      htmlTable = htmlTable & "<td>" & Mid(fields(7), 1, 16) & "</td>"
                      htmlTable = htmlTable & "</tr>"
                      displayCount = displayCount + 1
                  End If
              End If
          Next

          htmlTable = htmlTable & "</table>"
          document.getElementById("dataDisplay").innerHTML = htmlTable

          ShowStatistics(lines)

          If Not silent Then ShowStatus "‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ " & displayCount & " –∑–∞–ø–∏—Å—ñ–≤ –∑ " & totalRecords, "success"

          If Err.Number <> 0 Then
              If Not silent Then ShowStatus "‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è: " & Err.Description, "error"
          End If

          On Error GoTo 0
      End Sub

      Function FormatMoistureValue(value)
          If value = "-" Or value = "" Then
              FormatMoistureValue = "-"
          Else
              ' –ü–æ–∫–∞–∑—É–≤–∞—Ç–∏ —á–∏—Å–ª–æ —è–∫ —î –≤ CSV (–∑ –∫—Ä–∞–ø–∫–æ—é) + –∑–Ω–∞–∫ %
              FormatMoistureValue = value & "%"
          End If
      End Function

      Sub ShowStatistics(lines)
          On Error Resume Next

          Dim count, i, fields
          count = 0

          For i = 1 To UBound(lines)
              If Trim(lines(i)) <> "" Then
                  count = count + 1
              End If
          Next

          If count > 0 Then
              Dim statsHTML
              statsHTML = "<div class='stats-container'>"
              statsHTML = statsHTML & "<div class='stat-box'><div class='stat-value'>" & count & "</div><div class='stat-label'>–í—Å—å–æ–≥–æ –∑–∞–ø–∏—Å—ñ–≤</div></div>"
              statsHTML = statsHTML & "</div>"

              document.getElementById("stats").innerHTML = statsHTML
          End If

          On Error GoTo 0
      End Sub

      Sub LoadAverages()
          On Error Resume Next

          If Not fso.FileExists(csvFilePath) Then
              document.getElementById("averagesDisplay").innerHTML = "<p>–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —Å–µ—Ä–µ–¥–Ω—ñ—Ö –∑–Ω–∞—á–µ–Ω—å</p>"
              Exit Sub
          End If

          Dim file, content, lines, i, fields
          Set file = fso.OpenTextFile(csvFilePath, 1, False, -1)
          content = file.ReadAll()
          file.Close
          Set file = Nothing

          lines = Split(content, vbCrLf)

          ' –°–ª–æ–≤–Ω–∏–∫ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø–æ –¥–∞—Ç–∞—Ö
          Dim dateDict
          Set dateDict = CreateObject("Scripting.Dictionary")

          For i = 1 To UBound(lines)
              If Trim(lines(i)) <> "" Then
                  fields = Split(lines(i), ",")
                  If UBound(fields) >= 7 Then
                      Dim dateKey
                      dateKey = fields(0)

                      If Not dateDict.Exists(dateKey) Then
                          dateDict.Add dateKey, Array(0, 0, 0, 0, 0, 0) ' —Å—É–º–∏ —Ç–∞ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –ø–æ–∫–∞–∑–Ω–∏–∫–∞
                      End If

                      Dim dateData
                      dateData = dateDict(dateKey)

                      ' –î–æ–¥–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫—â–æ –≤–æ–Ω–∏ –Ω–µ –ø–æ—Ä–æ–∂–Ω—ñ (—á–∏—Å–ª–∞ –∑ –∫—Ä–∞–ø–∫–∞–º–∏ –≤ CSV)
                      ' –ü–µ—Ä–µ—Ç–≤–æ—Ä–∏—Ç–∏ –∫—Ä–∞–ø–∫–∏ –Ω–∞ –∫–æ–º–∏ –¥–ª—è —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó –ª–æ–∫–∞–ª—ñ–∑–∞—Ü—ñ—ó
                      If fields(2) <> "-" And fields(2) <> "" Then
                          Dim dranaVal
                          dranaVal = Replace(fields(2), ".", ",")
                          If IsNumeric(dranaVal) Then
                              dateData(0) = dateData(0) + CDbl(dranaVal)
                              dateData(1) = dateData(1) + 1
                          End If
                      End If

                      If fields(3) <> "-" And fields(3) <> "" Then
                          Dim flourVsVal
                          flourVsVal = Replace(fields(3), ".", ",")
                          If IsNumeric(flourVsVal) Then
                              dateData(2) = dateData(2) + CDbl(flourVsVal)
                              dateData(3) = dateData(3) + 1
                          End If
                      End If

                      If fields(4) <> "-" And fields(4) <> "" Then
                          Dim flour1sVal
                          flour1sVal = Replace(fields(4), ".", ",")
                          If IsNumeric(flour1sVal) Then
                              dateData(4) = dateData(4) + CDbl(flour1sVal)
                              dateData(5) = dateData(5) + 1
                          End If
                      End If

                      dateDict(dateKey) = dateData
                  End If
              End If
          Next

          ' –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ —Å–µ—Ä–µ–¥–Ω—ñ—Ö –∑–Ω–∞—á–µ–Ω—å
          Dim htmlTable
          htmlTable = "<table><tr><th>üìÖ –î–∞—Ç–∞</th><th>I –¥—Ä–∞–Ω–∞ (—Å–µ—Ä.)</th><th>–ë–æ—Ä–æ—à–Ω–æ –í/–° (—Å–µ—Ä.)</th><th>–ë–æ—Ä–æ—à–Ω–æ 1/–° (—Å–µ—Ä.)</th></tr>"

          Dim dateKeys
          dateKeys = dateDict.Keys

          ' –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –¥–∞—Ç (–ø—Ä–æ—Å—Ç–∏–π –º–µ—Ç–æ–¥)
          Dim j, k, temp
          For j = 0 To UBound(dateKeys) - 1
              For k = j + 1 To UBound(dateKeys)
                  If dateKeys(j) > dateKeys(k) Then
                      temp = dateKeys(j)
                      dateKeys(j) = dateKeys(k)
                      dateKeys(k) = temp
                  End If
              Next
          Next

          For j = UBound(dateKeys) To 0 Step -1 ' –ü–æ–∫–∞–∑–∞—Ç–∏ –≤ –∑–≤–æ—Ä–æ—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É (–Ω–∞–π–Ω–æ–≤—ñ—à—ñ —Å–ø–æ—á–∞—Ç–∫—É)
              Dim key, data
              key = dateKeys(j)
              data = dateDict(key)

              htmlTable = htmlTable & "<tr>"
              htmlTable = htmlTable & "<td><strong>" & key & "</strong></td>"

              ' I –¥—Ä–∞–Ω–∞
              If data(1) > 0 Then
                  htmlTable = htmlTable & "<td>" & Round(data(0) / data(1), 2) & "%</td>"
              Else
                  htmlTable = htmlTable & "<td>-</td>"
              End If

              ' –ë–æ—Ä–æ—à–Ω–æ –í/–°
              If data(3) > 0 Then
                  htmlTable = htmlTable & "<td>" & Round(data(2) / data(3), 2) & "%</td>"
              Else
                  htmlTable = htmlTable & "<td>-</td>"
              End If

              ' –ë–æ—Ä–æ—à–Ω–æ 1/–°
              If data(5) > 0 Then
                  htmlTable = htmlTable & "<td>" & Round(data(4) / data(5), 2) & "%</td>"
              Else
                  htmlTable = htmlTable & "<td>-</td>"
              End If

              htmlTable = htmlTable & "</tr>"
          Next

          htmlTable = htmlTable & "</table>"
          document.getElementById("averagesDisplay").innerHTML = htmlTable

          On Error GoTo 0
      End Sub

      Sub exportCSV()
          On Error Resume Next

          If Not fso.FileExists(csvFilePath) Then
              ShowStatus "‚ùå –ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è –µ–∫—Å–ø–æ—Ä—Ç—É!", "error"
              Exit Sub
          End If

          shell.Run """" & csvFilePath & """"
          ShowStatus "üìÑ CSV —Ñ–∞–π–ª –≤—ñ–¥–∫—Ä–∏—Ç–æ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É", "success"

          If Err.Number <> 0 Then
              ShowStatus "‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è —Ñ–∞–π–ª—É: " & Err.Description, "error"
          End If

          On Error GoTo 0
      End Sub

      Sub clearAllData()
          On Error Resume Next

          Dim result
          result = MsgBox("–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –í–°–Ü –¥–∞–Ω—ñ?" & vbCrLf & "–¶—é –¥—ñ—é –Ω–µ–º–æ–∂–ª–∏–≤–æ —Å–∫–∞—Å—É–≤–∞—Ç–∏!", vbYesNo + vbCritical + vbDefaultButton2, "–£–í–ê–ì–ê!")

          If result = vbYes Then
              If fso.FileExists(csvFilePath) Then
                  fso.DeleteFile(csvFilePath)
              End If
              InitializeDataFile()
              document.getElementById("dataDisplay").innerHTML = ""
              document.getElementById("stats").innerHTML = ""
              document.getElementById("averagesDisplay").innerHTML = ""
              ShowStatus "üóëÔ∏è –í—Å—ñ –¥–∞–Ω—ñ –≤–∏–¥–∞–ª–µ–Ω–æ!", "info"
              UpdateFileInfo()
          End If

          On Error GoTo 0
      End Sub

      Sub Window_OnUnload
          On Error Resume Next
          Set fso = Nothing
          Set shell = Nothing
          On Error GoTo 0
      End Sub
    </script>

    <script language="JavaScript">
      function showTab(tabName) {
        // –°—Ö–æ–≤–∞—Ç–∏ –≤—Å—ñ –≤–∫–ª–∞–¥–∫–∏
        document.getElementById("input-tab").style.display = "none";
        document.getElementById("averages-tab").style.display = "none";
        document.getElementById("data-tab").style.display = "none";

        // –í–∏–¥–∞–ª–∏—Ç–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–ª–∞—Å –∑ —É—Å—ñ—Ö –∫–Ω–æ–ø–æ–∫ –≤–∫–ª–∞–¥–æ–∫
        var buttons = document.getElementsByTagName("div");
        for (var i = 0; i < buttons.length; i++) {
          if (buttons[i].className.indexOf("tab-button") >= 0) {
            buttons[i].className = buttons[i].className.replace(" active", "");
            if (buttons[i].className.indexOf("active") >= 0) {
              buttons[i].className = buttons[i].className.replace("active", "");
            }
          }
        }

        // –ü–æ–∫–∞–∑–∞—Ç–∏ –æ–±—Ä–∞–Ω—É –≤–∫–ª–∞–¥–∫—É
        document.getElementById(tabName + "-tab").style.display = "block";

        // –î–æ–¥–∞—Ç–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–ª–∞—Å –¥–æ –Ω–∞—Ç–∏—Å–Ω—É—Ç–æ—ó –∫–Ω–æ–ø–∫–∏
        if (window.event && window.event.srcElement) {
          var button = window.event.srcElement;
          if (button.className.indexOf("active") < 0) {
            button.className += " active";
          }
        }

        // –Ø–∫—â–æ –ø–æ–∫–∞–∑—É—î–º–æ –≤–∫–ª–∞–¥–∫—É —Å–µ—Ä–µ–¥–Ω—ñ—Ö –∑–Ω–∞—á–µ–Ω—å, –æ–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ
        if (tabName === "averages") {
          LoadAverages();
        }
      }
    </script>
  </body>
</html>
